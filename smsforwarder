#!/usr/bin/python3
from gi.repository import GLib

import dbus
import dbus.mainloop.glib
import requests
import traceback
import sys
import signal
import multiprocessing.pool
import time

pool = multiprocessing.pool.ThreadPool()
loop = GLib.MainLoop()

def msg_forward(text):
    ret = True
    try:
        requests.get('https://<Telegram api>/api?token=<YOUR TOKEN>&chat-id=<YOUR CHAT ID>&text='+requests.utils.quote('#Phone \n'+text))
    except Exception:
        ret=False
    return ret

def msg_added_handler(path, received):
    if not received:
        return
    pool.apply_async(msg_handler, args=(path,))

def msg_handler(path):
    #print("Receive at "+path)
    msg = bus.get_object("org.freedesktop.ModemManager1",path)
    props_iface = dbus.Interface(msg, "org.freedesktop.DBus.Properties")
    content = props_iface.GetAll("org.freedesktop.ModemManager1.Sms")
    # Messages has not been completely received
    retry_times = 0
    while (content['State'] < 3 and retry_times < 3):
        msg = bus.get_object("org.freedesktop.ModemManager1",path)
        props_iface = dbus.Interface(msg, "org.freedesktop.DBus.Properties")
        content = props_iface.GetAll("org.freedesktop.ModemManager1.Sms")
        retry_times = retry_times + 1
        time.sleep(3)
    # Outgoing Messages MM_SMS_STATE_SENDING and MM_SMS_STATE_SENT
    if (content['State'] != 3 and retry_times < 3):
        return
    elif (content['State'] != 3 and retry_times >= 3):
        context['Text'] = "receive sms failed"
    text = "Number: "+content['Number']+"\nText:\n"+content['Text']+"\nTime: "+content['Timestamp']
    msg_forward(text)

def sigint_handler(sig, frame):
    if sig == signal.SIGINT:
        pool.close()
        pool.join()
        loop.quit()

if __name__ == '__main__':
    dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)
    bus = dbus.SystemBus()
    signal.signal(signal.SIGINT, sigint_handler)
    try:
        object = bus.get_object("org.freedesktop.ModemManager1","/org/freedesktop/ModemManager1/Modem/0")
        object.connect_to_signal("Added", msg_added_handler, dbus_interface="org.freedesktop.ModemManager1.Modem.Messaging")
    except dbus.DBusException:
        traceback.print_exc()
        pool.close()
        loop.quit()
        sys.exit(1)
    loop.run()
